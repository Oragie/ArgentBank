swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

      #phase 2:
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: User Account API
      description: API for fetching a user account
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User Accounts retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: invalid Fields
        "500":
          description: Internal Server Error

  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Transactions API
      description: API for fetching a user transactions
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: query
          name: transactionType
          type: string
          description: Filter by transaction type (e.g., "Electronic", "Cash", etc.)
          required: false
        - in: query
          name: category
          type: string
          description: Filter by category (e.g., "Food", "Travel", etc.)
          required: false
        - in: query
          name: date
          type: string
          format: date
          description: Filter by transaction date (YYYY-MM-DD)
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid fields
        "500":
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction Details
      description: Update the `category` and `notes` fields of a specific transaction.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Fields to update
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: New category for the transaction
                enum:
                  - "Undefined"
                  - "Food"
                  - "Travel"
                  - "Entertainment"
                  - "Shopping"
                  - "Utilities"
                  - "Health"
                  - "Education"
                  - "Other"
              notes:
                type: string
                description: New notes for the transaction
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid request parameters
        "401":
          description: Unauthorized - Missing or invalid token
        "500":
          description: Internal Server Error



securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  UserTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: array
            items:
              $ref: "#/definitions/Transaction"

  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transaction:
            $ref: "#/definitions/Transaction"

  Account:
    type: object
    properties:
      id:
        type: string
      accountNumber:
        type: string
      title:
        type: string
      amount:
        type: number
        format: float
      description:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: number
        format: float
      balance:
        type: number
        format: float
      transactionType:
        type: string
        enum:
          - "Electronic"
          - "Cash"
          - "Transfer"
          - "Deposit"
      category:
        type: string
        enum:
          - "Undefined"
          - "Food"
          - "Travel"
          - "Entertainment"
          - "Shopping"
          - "Utilities"
          - "Health"
          - "Education"
          - "Other"
      notes:
        type: string
      accountId:
        type: string